{
    "swagger": "2.0",
    "info": {
        "title": "Library Mangement System API",
        "contact": {}
    },
    "paths": {
        "/api/v1/audit_log": {
            "get": {
                "description": "List relevant audit logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audit log"
                ],
                "summary": "List audit logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by action",
                        "name": "filter[action]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by column name",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by direction (asc or desc)",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-array_auditlogview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/audit_log/": {
            "post": {
                "description": "list relevang audit logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audit log"
                ],
                "summary": "list audit logs",
                "parameters": [
                    {
                        "description": "Audit log creation request",
                        "name": "audit_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auditlogparams.BaseParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgMsgResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "signs in a user and creates a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "sign in a user",
                "parameters": [
                    {
                        "description": "User creation request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userparams.SignInParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-userview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "get": {
                "description": "signs out the user and revoke their session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignOut",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgMsgResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "description": "Creates a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation request",
                        "name": "createuserparam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userparams.CreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-userview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book": {
            "get": {
                "description": "Lists books in the library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "List books",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by value",
                        "name": "filter[value]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by column name (e.g. title)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by direction (asc or desc)",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-array_bookview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/": {
            "post": {
                "description": "creates a new book in the library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Create a book",
                "parameters": [
                    {
                        "description": "Book creation request",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bookparams.CreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-bookview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}": {
            "get": {
                "description": "reads a book in the library",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Read book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID to read",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-bookview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a book from the library",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Delete a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID to delete",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-bookview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an existing book in the library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book"
                ],
                "summary": "Update a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID to update",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book update request",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bookparams.UpdateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-bookview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/loan/": {
            "post": {
                "description": "Loans a book from the library",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loan"
                ],
                "summary": "Loan a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for loan",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-loanview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/loan/{loan_id}/": {
            "get": {
                "description": "Retrieves a loan from the library",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loan"
                ],
                "summary": "Read a loan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for loan",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "loan ID to read",
                        "name": "loan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-loanview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing loan in the library",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loan"
                ],
                "summary": "Delete a loan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for loan",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "loan ID to delete",
                        "name": "loan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-loanview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/loan/{loan_id}/fine/{fine_id}": {
            "delete": {
                "description": "deletes a fine belonging to a loan",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fine"
                ],
                "summary": "Delete fine",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for loan",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "loan ID to fine",
                        "name": "loan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "fine ID to delete",
                        "name": "fine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-fineview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/loan/{loan_id}/fine/{fine_id}/settle": {
            "patch": {
                "description": "settles a fine belonging to a loan",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fine"
                ],
                "summary": "Settle fine",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for loan",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "loan ID to fine",
                        "name": "loan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "fine ID to settle",
                        "name": "fine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-fineview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/loan/{loan_id}/renew": {
            "patch": {
                "description": "Renews a loan from the library",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loan"
                ],
                "summary": "Renew a loan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for loan",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "loan ID to renew",
                        "name": "loan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-loanview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/loan/{loan_id}/return": {
            "patch": {
                "description": "Returns a book to the library",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loan"
                ],
                "summary": "Return a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for loan",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "loan ID to return",
                        "name": "loan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-loanview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/reservation/": {
            "post": {
                "description": "Creates a reservation for a book",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservation"
                ],
                "summary": "Create a reservation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for reservation",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-reservationview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/reservation/{reservation_id}/": {
            "get": {
                "description": "Reads a reservation for a book",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservation"
                ],
                "summary": "Read a reservation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for reservation",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "reservation ID to read",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-reservationview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a reservation for a book",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservation"
                ],
                "summary": "Delete a reservation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for reservation",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "reservation ID to delete",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-reservationview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/reservation/{reservation_id}/cancel": {
            "patch": {
                "description": "Cancels a reservation for a book",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservation"
                ],
                "summary": "Cancel a reservation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for reservation",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "reservation ID to cancel",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-reservationview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/book/{book_id}/reservation/{reservation_id}/checkout": {
            "patch": {
                "description": "Checks out a book for a given reservation",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservation"
                ],
                "summary": "Checkout a book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID for reservation",
                        "name": "book_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "reservation ID to checkout",
                        "name": "reservation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-reservationview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/fine": {
            "get": {
                "description": "List fines belonging to a loan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fine"
                ],
                "summary": "List fines",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "filter[user_id]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by column name",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by direction (asc or desc)",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-array_fineview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgMsgResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/loan": {
            "get": {
                "description": "List loans depending on collection query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "loan"
                ],
                "summary": "List loans",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "filter[user_id]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by column name",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by direction (asc or desc)",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-array_loanview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/reservation": {
            "get": {
                "description": "List reservations in the library depending on the collection query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservation"
                ],
                "summary": "List reservations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "filter[user_id]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by column name",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by direction (asc or desc)",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-array_reservationview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "description": "List users depending on the collection query",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 25,
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Filter by user ID",
                        "name": "filter[user_id]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"created_at\"",
                        "description": "Sort by column name",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"desc\"",
                        "description": "Order by asc or desc",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-array_reservationview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/currentuser": {
            "get": {
                "description": "Retrieves the current user if logged in",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-userview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{user_id}": {
            "get": {
                "description": "Retrieves an existing user from the system",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Read an existing user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID to retrieve",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-userview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing user in the system",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete an existing user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID to delete",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-userview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an existing user in the system. This only includes username, first name, last name, preferred name, language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update an existing user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID to update",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update request",
                        "name": "createuserparam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userparams.UpdateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-userview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{user_id}/role": {
            "patch": {
                "description": "Update user role of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID to update role",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update role request",
                        "name": "updateroleparam",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userparams.UpdateRoleParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwgResponse-userview_View"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.SwgErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Message": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.Meta": {
            "type": "object",
            "properties": {
                "filtered_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "api.SwgErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                }
            }
        },
        "api.SwgMsgResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                }
            }
        },
        "api.SwgResponse-array_auditlogview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auditlogview.View"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-array_bookview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bookview.View"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-array_fineview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fineview.View"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-array_loanview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/loanview.View"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-array_reservationview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/reservationview.View"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-bookview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/bookview.View"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-fineview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/fineview.View"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-loanview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/loanview.View"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-reservationview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/reservationview.View"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.SwgResponse-userview_View": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/userview.View"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Message"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "auditlogparams.BaseParams": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                }
            }
        },
        "auditlogview.View": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "bookparams.CreateParams": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "isbn": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "publication_date": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "bookparams.UpdateParams": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isbn": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "publication_date": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "bookview.View": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isbn": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "publication_date": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "fineview.View": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "loan_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "loanhistoryview.View": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "loan_id": {
                    "type": "integer"
                }
            }
        },
        "loanview.View": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "integer"
                },
                "borrow_date": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "fines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fineview.View"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "loan_histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/loanhistoryview.View"
                    }
                },
                "return_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "peopleparams.BaseParams": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "language_preference": {
                    "type": "string"
                },
                "preferred_name": {
                    "type": "string"
                }
            }
        },
        "peopleparams.UpdateParams": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "language_preference": {
                    "type": "string"
                },
                "preferred_name": {
                    "type": "string"
                }
            }
        },
        "personview.View": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "language_preference": {
                    "type": "string"
                },
                "preferred_name": {
                    "type": "string"
                }
            }
        },
        "reservationview.View": {
            "type": "object",
            "properties": {
                "book_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "reservation_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "userparams.CreateParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "person_attributes": {
                    "$ref": "#/definitions/peopleparams.BaseParams"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "userparams.SignInParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "userparams.UpdateParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "person_attributes": {
                    "$ref": "#/definitions/peopleparams.UpdateParams"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "userparams.UpdateRoleParams": {
            "type": "object",
            "properties": {
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "userview.View": {
            "type": "object",
            "properties": {
                "abilities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "person_attributes": {
                    "$ref": "#/definitions/personview.View"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}